substitutions:
  '_BASE_IMAGE': 'cos-dev-101-16963-0-0'
  '_BASE_IMAGE_PROJECT': 'cos-cloud'
  '_OUTPUT_IMAGE': ''
  '_IMAGE_ENV': 'debug'

steps:
  - name: golang:1.18
    entrypoint: /bin/bash
    args:
      - -c
      - |
        cd launcher
        go build  
  - name: 'gcr.io/cos-cloud/cos-customizer'
    args: ['start-image-build',
           '-gcs-bucket=${PROJECT_ID}_cloudbuild',
           '-gcs-workdir=customizer-${BUILD_ID}',
           '-image-name=${_BASE_IMAGE}',
           '-image-project=${_BASE_IMAGE_PROJECT}']
  - name: 'gcr.io/cos-cloud/cos-customizer'
    args: ['run-script',
           '-script=launcher/preload.sh',
           '-env=IMAGE_ENV=${_IMAGE_ENV}']
  - name: 'gcr.io/cos-cloud/cos-customizer'
    args: ['seal-oem']
  - name: 'gcr.io/cos-cloud/cos-customizer'
    args: ['run-script',
           '-script=launcher/fixup_oem.sh']
  - name: 'gcr.io/cos-cloud/cos-customizer'
    args: ['finish-image-build',
           '-oem-size=500M',
           '-disk-size-gb=11',
           '-image-name=confidential-space-${_OUTPUT_IMAGE}',
           '-image-family=confidential-space-dev',
           '-image-project=${PROJECT_ID}',
           '-licenses=projects/confidential-space-images/global/licenses/confidential-space',
           '-licenses=projects/confidential-space-images/global/licenses/ek-certificate-license',
           '-zone=us-central1-a',
           '-project=${PROJECT_ID}']

timeout: '3000s'

options:
  logging: CLOUD_LOGGING_ONLY
